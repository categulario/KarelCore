#!/usr/bin/env python
# -*- coding: utf-8 -*-
# generated by wxGlade 0.6.5 on Sun Jul 29 11:29:30 2012

import wx
from wx.stc import StyledTextCtrl

# begin wxGlade: extracode
# end wxGlade


class KarelFrame(wx.Frame):
    def __init__(self, *args, **kwds):
        # begin wxGlade: KarelFrame.__init__
        kwds["style"] = wx.DEFAULT_FRAME_STYLE
        wx.Frame.__init__(self, *args, **kwds)

        # Menu Bar
        self.kframe_menubar = wx.MenuBar()
        wxglade_tmp_menu = wx.Menu()
        wxglade_tmp_menu.Append(wx.NewId(), _("Salir"), _("Sair del programa por completo"), wx.ITEM_NORMAL)
        self.kframe_menubar.Append(wxglade_tmp_menu, _("&Karel"))
        wxglade_tmp_menu = wx.Menu()
        wxglade_tmp_menu.Append(wx.NewId(), _("Nuevo"), _("Crea un nuevo programa"), wx.ITEM_NORMAL)
        wxglade_tmp_menu.Append(wx.NewId(), _("Abrir..."), _(u"Abre un código de Karel"), wx.ITEM_NORMAL)
        wxglade_tmp_menu.Append(wx.NewId(), _("Guardar"), _(u"Guarda el código actual"), wx.ITEM_NORMAL)
        wxglade_tmp_menu.Append(wx.NewId(), _("Guardar como..."), _(u"Guarda el código actual con otro nombre"), wx.ITEM_NORMAL)
        self.kframe_menubar.Append(wxglade_tmp_menu, _("Programa"))
        wxglade_tmp_menu = wx.Menu()
        wxglade_tmp_menu.Append(wx.NewId(), _("Nuevo"), _("Crea un nuevo mundo"), wx.ITEM_NORMAL)
        wxglade_tmp_menu.Append(wx.NewId(), _("Abrir..."), _("Abre un archivo de mundo"), wx.ITEM_NORMAL)
        wxglade_tmp_menu.Append(wx.NewId(), _("Guardar"), _("Guarda el mundo actual"), wx.ITEM_NORMAL)
        wxglade_tmp_menu.Append(wx.NewId(), _("Guardar como..."), _("Guarda el mundo actual con otro nombre"), wx.ITEM_NORMAL)
        self.kframe_menubar.Append(wxglade_tmp_menu, _("Mundo"))
        wxglade_tmp_menu = wx.Menu()
        wxglade_tmp_menu.Append(wx.NewId(), _(u"Documentación"), _(u"Lee la documentación de Karel"), wx.ITEM_NORMAL)
        wxglade_tmp_menu.AppendSeparator()
        wxglade_tmp_menu.Append(wx.NewId(), _("Acerca de..."), _("Cosas importantes que saber de Karel"), wx.ITEM_NORMAL)
        wxglade_tmp_menu.Append(wx.NewId(), _(u"Créditos"), _("Personas que ayudaron a este proyecto"), wx.ITEM_NORMAL)
        self.kframe_menubar.Append(wxglade_tmp_menu, _("Ayuda"))
        self.SetMenuBar(self.kframe_menubar)
        # Menu Bar end
        self.kframe_statusbar = self.CreateStatusBar(3, 0)

        # Tool Bar
        self.kframe_toolbar = wx.ToolBar(self, -1, style=wx.TB_HORIZONTAL | wx.TB_DOCKABLE | wx.TB_3DBUTTONS)
        self.SetToolBar(self.kframe_toolbar)
        self.kframe_toolbar.AddLabelTool(wx.NewId(), _("Nuevo"), wx.Bitmap("/home/facmate1/GitHub/PyRel/wx/test/wxKarel_with_glade/images/document-new.png", wx.BITMAP_TYPE_ANY), wx.Bitmap("/home/facmate1/GitHub/PyRel/wx/test/wxKarel_with_glade/images/document-new.png", wx.BITMAP_TYPE_ANY), wx.ITEM_NORMAL, _("Nuevo programa"), _("Crea un nuevo programa"))
        self.kframe_toolbar.AddLabelTool(wx.NewId(), _("Abrir"), wx.Bitmap("/home/facmate1/GitHub/PyRel/wx/test/wxKarel_with_glade/images/document-open.png", wx.BITMAP_TYPE_ANY), wx.Bitmap("/home/facmate1/GitHub/PyRel/wx/test/wxKarel_with_glade/images/document-open.png", wx.BITMAP_TYPE_ANY), wx.ITEM_NORMAL, _("Abrir programa"), _("Abre un archivo de programa"))
        self.kframe_toolbar.AddLabelTool(wx.NewId(), _("Guardar"), wx.Bitmap("/home/facmate1/GitHub/PyRel/wx/test/wxKarel_with_glade/images/document-save.png", wx.BITMAP_TYPE_ANY), wx.Bitmap("/home/facmate1/GitHub/PyRel/wx/test/wxKarel_with_glade/images/document-save.png", wx.BITMAP_TYPE_ANY), wx.ITEM_NORMAL, _("Guardar programa"), _("Guarda el programa a un archivo"))
        self.kframe_toolbar.AddSeparator()
        self.kframe_toolbar.AddLabelTool(wx.NewId(), _("Nuevo"), wx.Bitmap("/home/facmate1/GitHub/PyRel/wx/test/wxKarel_with_glade/images/world-new.png", wx.BITMAP_TYPE_ANY), wx.Bitmap("/home/facmate1/GitHub/PyRel/wx/test/wxKarel_with_glade/images/world-new.png", wx.BITMAP_TYPE_ANY), wx.ITEM_NORMAL, _("Nuevo mundo"), _("Crea un nuevo mundo donde todo es felicidad"))
        self.kframe_toolbar.AddLabelTool(wx.NewId(), _("Abrir"), wx.Bitmap("/home/facmate1/GitHub/PyRel/wx/test/wxKarel_with_glade/images/world-open.png", wx.BITMAP_TYPE_ANY), wx.Bitmap("/home/facmate1/GitHub/PyRel/wx/test/wxKarel_with_glade/images/world-open.png", wx.BITMAP_TYPE_ANY), wx.ITEM_NORMAL, _("Abre un mundo"), _("Entra a un mundo desconocido"))
        self.kframe_toolbar.AddLabelTool(wx.NewId(), _("Guardar"), wx.Bitmap("/home/facmate1/GitHub/PyRel/wx/test/wxKarel_with_glade/images/world-save.png", wx.BITMAP_TYPE_ANY), wx.Bitmap("/home/facmate1/GitHub/PyRel/wx/test/wxKarel_with_glade/images/world-save.png", wx.BITMAP_TYPE_ANY), wx.ITEM_NORMAL, _("Salva el mundo"), _(u"Salva el mundo de la destrucción"))
        self.kframe_toolbar.AddSeparator()
        self.kframe_toolbar.AddLabelTool(wx.NewId(), _("Regresar"), wx.Bitmap("/home/facmate1/GitHub/PyRel/wx/test/wxKarel_with_glade/images/view-refresh.png", wx.BITMAP_TYPE_ANY), wx.Bitmap("/home/facmate1/GitHub/PyRel/wx/test/wxKarel_with_glade/images/view-refresh.png", wx.BITMAP_TYPE_ANY), wx.ITEM_NORMAL, _("Regresar al estado original"), _("Regresa el mundo y el programa a su estado original"))
        self.kframe_toolbar.AddSeparator()
        self.kframe_toolbar.AddLabelTool(wx.NewId(), _("Compilar"), wx.Bitmap("/home/facmate1/GitHub/PyRel/wx/test/wxKarel_with_glade/images/applications-system.png", wx.BITMAP_TYPE_ANY), wx.Bitmap("/home/facmate1/GitHub/PyRel/wx/test/wxKarel_with_glade/images/applications-system.png", wx.BITMAP_TYPE_ANY), wx.ITEM_NORMAL, _("Compilar programa"), _("Compila el programa"))
        self.kframe_toolbar.AddLabelTool(wx.NewId(), _("Correr"), wx.Bitmap("/home/facmate1/GitHub/PyRel/wx/test/wxKarel_with_glade/images/media-playback-start.png", wx.BITMAP_TYPE_ANY), wx.Bitmap("/home/facmate1/GitHub/PyRel/wx/test/wxKarel_with_glade/images/media-playback-start.png", wx.BITMAP_TYPE_ANY), wx.ITEM_NORMAL, _("Ejecutar programa"), _("Ejecuta el programa en el mundo"))
        self.kframe_toolbar.AddLabelTool(wx.NewId(), _("Atras"), wx.Bitmap("/home/facmate1/GitHub/PyRel/wx/test/wxKarel_with_glade/images/media-seek-backward.png", wx.BITMAP_TYPE_ANY), wx.Bitmap("/home/facmate1/GitHub/PyRel/wx/test/wxKarel_with_glade/images/media-seek-backward.png", wx.BITMAP_TYPE_ANY), wx.ITEM_NORMAL, _("Retrocede"), _(u"Retroceder en le ejecución"))
        self.kframe_toolbar.AddLabelTool(wx.NewId(), _("Adelante"), wx.Bitmap("/home/facmate1/GitHub/PyRel/wx/test/wxKarel_with_glade/images/media-seek-forward.png", wx.BITMAP_TYPE_ANY), wx.Bitmap("/home/facmate1/GitHub/PyRel/wx/test/wxKarel_with_glade/images/media-seek-forward.png", wx.BITMAP_TYPE_ANY), wx.ITEM_NORMAL, _("Avanza"), _(u"Avanza en la ejecución"))
        # Tool Bar end
        self.kseparator = wx.SplitterWindow(self, -1, style=wx.SP_3D | wx.SP_BORDER)
        self.keditorzone = wx.SplitterWindow(self.kseparator, -1, style=wx.SP_3D | wx.SP_BORDER)
        self.kprogram = StyledTextCtrl(self.keditorzone, -1)
        self.notebook_1 = wx.Notebook(self.keditorzone, -1, style=0)
        self.notebook_1_pane_1 = wx.Panel(self.notebook_1, -1)
        self.notebook_1_pane_2 = wx.Panel(self.notebook_1, -1)
        self.panel_1 = wx.Panel(self.kseparator, -1)
        self.label_1 = wx.StaticText(self.panel_1, -1, _("Mochila: "))
        self.text_ctrl_1 = wx.TextCtrl(self.panel_1, -1, _("0"))
        self.label_2 = wx.StaticText(self.panel_1, -1, _(u"Retraso en la ejecución (ms): "))
        self.text_ctrl_2 = wx.TextCtrl(self.panel_1, -1, _("500"))
        self.panel_2 = wx.ScrolledWindow(self.panel_1, -1, style=wx.TAB_TRAVERSAL)
        self.panel_3 = wx.Panel(self.panel_2, -1)

        self.__set_properties()
        self.__do_layout()

        self.Bind(wx.EVT_MENU, self.on_exit, id=-1)
        # end wxGlade

    def __set_properties(self):
        # begin wxGlade: KarelFrame.__set_properties
        self.SetTitle(_("Karel el Robot"))
        _icon = wx.EmptyIcon()
        _icon.CopyFromBitmap(wx.Bitmap("/home/facmate1/GitHub/PyRel/wx/test/wxKarel_with_glade/images/logo/karel.png", wx.BITMAP_TYPE_ANY))
        self.SetIcon(_icon)
        self.SetSize((1038, 638))
        self.kframe_statusbar.SetStatusWidths([-1, 100, 120])
        # statusbar fields
        kframe_statusbar_fields = [_("Me llamo Karel"), _("Mochila: 0"), _("Estado: OK")]
        for i in range(len(kframe_statusbar_fields)):
            self.kframe_statusbar.SetStatusText(kframe_statusbar_fields[i], i)
        self.kframe_toolbar.SetToolBitmapSize((16, 16))
        self.kframe_toolbar.Realize()
        self.kprogram.SetForegroundColour(wx.Colour(3, 12, 87))
        self.kprogram.SetFont(wx.Font(11, wx.SCRIPT, wx.NORMAL, wx.NORMAL, 0, ""))
        self.label_1.SetToolTipString(_("Zumbadores en la mochila de Karel"))
        self.panel_3.SetMinSize((2040, 2040))
        self.panel_3.SetBackgroundColour(wx.Colour(142, 35, 35))
        self.panel_2.SetScrollRate(10, 10)
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: KarelFrame.__do_layout
        sizer_2 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_1 = wx.FlexGridSizer(2, 1, 0, 0)
        sizer_5 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_3 = wx.FlexGridSizer(1, 4, 0, 0)
        self.notebook_1.AddPage(self.notebook_1_pane_1, _("Pila"))
        self.notebook_1.AddPage(self.notebook_1_pane_2, _("Consola"))
        self.keditorzone.SplitHorizontally(self.kprogram, self.notebook_1, -200)
        sizer_3.Add(self.label_1, 0, wx.ALIGN_CENTER_HORIZONTAL | wx.ALIGN_CENTER_VERTICAL, 0)
        sizer_3.Add(self.text_ctrl_1, 0, 0, 0)
        sizer_3.Add(self.label_2, 0, wx.ALIGN_CENTER_HORIZONTAL | wx.ALIGN_CENTER_VERTICAL, 0)
        sizer_3.Add(self.text_ctrl_2, 0, 0, 0)
        sizer_1.Add(sizer_3, 1, wx.EXPAND, 0)
        sizer_5.Add(self.panel_3, 1, wx.EXPAND, 0)
        self.panel_2.SetSizer(sizer_5)
        sizer_1.Add(self.panel_2, 1, wx.EXPAND, 0)
        self.panel_1.SetSizer(sizer_1)
        sizer_1.AddGrowableRow(1)
        sizer_1.AddGrowableCol(0)
        self.kseparator.SplitVertically(self.keditorzone, self.panel_1, 439)
        sizer_2.Add(self.kseparator, 1, wx.EXPAND, 0)
        self.SetSizer(sizer_2)
        self.Layout()
        # end wxGlade

    def on_exit(self, event):  # wxGlade: KarelFrame.<event_handler>
        print "metodo 'on_exit' no implementado"
        event.Skip()

# end of class KarelFrame
class KarelWindow(wx.App):
    def OnInit(self):
        wx.InitAllImageHandlers()
        kframe = KarelFrame(None, -1, "")
        self.SetTopWindow(kframe)
        kframe.Show()
        return 1

# end of class KarelWindow

if __name__ == "__main__":
    import gettext
    gettext.install("Karel") # replace with the appropriate catalog name

    Karel = KarelWindow(0)
    Karel.MainLoop()
